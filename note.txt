1.
https://man7.org/linux/man-pages/man2/mmap.2.html 

focus : MAP_SHARED
              Share this mapping.  Updates to the mapping are visible to
              other processes mapping the same region, and (in the case
              of file-backed mappings) are carried through to the
              underlying file.  (To precisely control when updates are
              carried through to the underlying file requires the use of
              msync(2).)

https://man7.org/linux/man-pages/man2/msync.2.html

focus : msync() flushes changes made to the in-core copy of a file that
       was mapped into memory using mmap(2) back to the filesystem.
       Without use of this call, there is no guarantee that changes are
       written back before munmap(2) is called.  To be more precise, the
       part of the file that corresponds to the memory area starting at
       addr and having length length is updated.


dubbi: 
- se devo fare append alla fine di un file, all'interno del blocco come faccio a sapere offset da cui partire?
	idea : dimensione del file%BLOCK_SIZE mi dirà offset nell'ultimo blocco. 

MY_DISK 
1. open an empty file with flag O_CREAT
2. ftruncate it to have a size multiple of BLOCK_SIZE (4096?) 
3. mmap it, use flag MAP_SHARED (see documentation) and combine it with the use of mysinc function (flushes changes back to the file system)
4. file allocation: FAT quindi 
	-array_list at the beginning of the disk 
	-lista di indici iniziali di blocchi liberi 
	-ha senso creare una struttura dati per ogni blocco 

	
FILE_STRUCTURE 
	-FCB : will contain metadata (start index, final index (useful for append), owner, size, flag (is_directory),posso inserire offset dell'ultimo (ha senso?), ecc... ) 
	- Directory normal FCB but additional list of indexes (start of files in the directory) 
	
	


PROSSIMO STEP : 
strutture dati file e directory (creazione fcb ecc... ) 
creazione, rimozione, ecc e implementazione a livello del disco






- NUOVO MODULO (TIPO FS) in cui gestisco creazione e tutte le altre operazioni ( usando questi due moduli che ho già creato )  

-  il file della directory: dati =  lista di fcb (stanno nel disco)


21/05 

mancano funzioni nel disco: 

1. format | touch -> sul disco mi serve funzione per occupare x memoria (anche se non ci scrivo nulla dentro) 
2. append -> funzione per scrivere nei blocchi 
3. cat -> funzione per leggere dai blocchi 
4. rm -> funzione per liberare blocchi (funzione per cancellare da children della directroy 
5. close ??????????????????????
2. mkdir -> sul disco mi serve funzione per creare directory vuota (inizializzare lista di pcb) 


PER PROSSIMA VOLTA: 
1. funzione per scrivere un file intero (nOn solo blocchi ) sul disco chi se ne occupa?, se se ne occupa modulo esterno avrò bisogno di funzione per accedere  a blocchi del file. se se ne occupa modulo del disco easy 


1. quando aggiungo un file non gestisco il fatto di aggiungerlo al contenuto della directory FCB free elimina

documenta meglio le funzioni

fcb da filename con questa nuova logica

since last commit : suddivisione ulteriore in altri due moduli -> vrFS.h diviso da vrFS_block_manager
vrFS_dir nuovo -> si occupa di operazioni di aggiornamento delle directory 

implementazione aggiornamento delle directory per aggiunta file, scrittura ecc 


